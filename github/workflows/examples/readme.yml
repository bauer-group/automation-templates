name: üìÑ Professional README Generator

on:
  workflow_call:
    inputs:
      template-path:
        description: 'Path to README template file'
        required: false
        type: string
        default: 'docs/README.template.MD'
      output-path:
        description: 'Path for generated README file'
        required: false
        type: string
        default: 'README.MD'
      project-name:
        description: 'Project name (auto-detected if empty)'
        required: false
        type: string
        default: ''
      company-name:
        description: 'Company name'
        required: false
        type: string
        default: 'BAUER GROUP'
      project-description:
        description: 'Project description (auto-detected if empty)'
        required: false
        type: string
        default: ''
      contact-email:
        description: 'Contact email address'
        required: false
        type: string
        default: ''
      documentation-url:
        description: 'Documentation URL'
        required: false
        type: string
        default: ''
      support-url:
        description: 'Support URL'
        required: false
        type: string
        default: ''
      force-update:
        description: 'Force README update even without changes'
        required: false
        type: boolean
        default: false
      validate-output:
        description: 'Validate generated README'
        required: false
        type: boolean
        default: true
      auto-commit:
        description: 'Automatically commit changes'
        required: false
        type: boolean
        default: true
      custom-version:
        description: 'Custom version (overrides git tag detection)'
        required: false
        type: string
        default: ''
    outputs:
      readme_updated:
        description: 'Whether README was updated'
        value: ${{ jobs.generate-readme.outputs.readme_updated }}
      changes_detected:
        description: 'Whether changes were detected'
        value: ${{ jobs.generate-readme.outputs.changes_detected }}
      validation_passed:
        description: 'Whether validation passed'
        value: ${{ jobs.generate-readme.outputs.validation_passed }}
      file_size:
        description: 'Size of generated README file'
        value: ${{ jobs.generate-readme.outputs.file_size }}
      unresolved_placeholders:
        description: 'Number of unresolved placeholders'
        value: ${{ jobs.generate-readme.outputs.unresolved_placeholders }}

permissions:
  contents: write
  pull-requests: write
  metadata: read

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    outputs:
      readme_updated: ${{ steps.generate.outputs.readme_updated }}
      changes_detected: ${{ steps.generate.outputs.changes_detected }}
      validation_passed: ${{ steps.generate.outputs.validation_passed }}
      file_size: ${{ steps.generate.outputs.file_size }}
      unresolved_placeholders: ${{ steps.generate.outputs.unresolved_placeholders }}
    
    steps:
      - name: üöÄ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: üîç Validate Prerequisites
        run: |
          TEMPLATE_FILE="${{ inputs.template-path }}"
          
          if [ ! -f "$TEMPLATE_FILE" ]; then
            echo "‚ùå Template file not found: $TEMPLATE_FILE"
            echo "üí° Available template files:"
            find . -name "*.template.*" -type f | head -10
            exit 1
          fi
          
          echo "‚úÖ Template file found: $TEMPLATE_FILE"
          
          # Check template content
          TEMPLATE_SIZE=$(wc -c < "$TEMPLATE_FILE")
          if [ "$TEMPLATE_SIZE" -lt 100 ]; then
            echo "‚ö†Ô∏è Template file seems too small ($TEMPLATE_SIZE bytes)"
          fi
          
          # Check for placeholders
          PLACEHOLDER_COUNT=$(grep -o "{{[^}]*}}" "$TEMPLATE_FILE" | sort | uniq | wc -l || echo "0")
          echo "üîß Found $PLACEHOLDER_COUNT unique placeholders in template"
          
          if [ "$PLACEHOLDER_COUNT" -eq 0 ]; then
            echo "‚ö†Ô∏è No placeholders found in template - this might not be a template file"
          fi

      - name: üìù Generate Professional README
        id: generate
        uses: ./.github/actions/readme-generate
        with:
          template-path: ${{ inputs.template-path }}
          output-path: ${{ inputs.output-path }}
          project-name: ${{ inputs.project-name }}
          company-name: ${{ inputs.company-name }}
          project-description: ${{ inputs.project-description }}
          contact-email: ${{ inputs.contact-email }}
          documentation-url: ${{ inputs.documentation-url }}
          support-url: ${{ inputs.support-url }}
          force-update: ${{ inputs.force-update }}
          validate-output: ${{ inputs.validate-output }}
          custom-version: ${{ inputs.custom-version }}

      - name: üì§ Commit and Push Changes
        if: steps.generate.outputs.changes_detected == 'true' && inputs.auto-commit == true
        run: |
          OUTPUT_FILE="${{ inputs.output-path }}"
          
          if git diff --quiet "$OUTPUT_FILE"; then
            echo "‚ÑπÔ∏è No changes to commit"
          else
            echo "üöÄ Committing README changes..."
            
            # Configure git if not already configured
            git config --local user.email "action@github.com"
            git config --local user.name "üìÑ README Generator"
            
            # Add and commit the file
            git add "$OUTPUT_FILE"
            git commit -m "docs: update $OUTPUT_FILE [automated]" \
              -m "Generated from template: ${{ inputs.template-path }}" \
              -m "File size: ${{ steps.generate.outputs.file_size }} bytes" \
              -m "Unresolved placeholders: ${{ steps.generate.outputs.unresolved_placeholders }}"
            
            # Push changes
            git push
            echo "‚úÖ Changes pushed successfully"
          fi

      - name: üìä Generate Summary Report
        if: always()
        run: |
          echo "### üìÑ README Generation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Template Source** | \`${{ inputs.template-path }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Output File** | \`${{ inputs.output-path }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Project Name** | ${{ inputs.project-name || 'Auto-detected' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Company** | ${{ inputs.company-name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Custom Version** | ${{ inputs.custom-version || 'Git tag auto-detection' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Force Update** | ${{ inputs.force-update }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Auto Commit** | ${{ inputs.auto-commit }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### üìà Generation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Changes Detected** | ${{ steps.generate.outputs.changes_detected }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Validation Passed** | ${{ steps.generate.outputs.validation_passed }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **README Updated** | ${{ steps.generate.outputs.readme_updated }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **File Size** | ${{ steps.generate.outputs.file_size }} bytes |" >> $GITHUB_STEP_SUMMARY
          echo "| **Unresolved Placeholders** | ${{ steps.generate.outputs.unresolved_placeholders }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Status message
          if [ "${{ steps.generate.outputs.validation_passed }}" = "true" ]; then
            if [ "${{ steps.generate.outputs.changes_detected }}" = "true" ]; then
              echo "‚úÖ **README successfully generated and updated!**" >> $GITHUB_STEP_SUMMARY
              if [ "${{ steps.generate.outputs.unresolved_placeholders }}" != "0" ]; then
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "‚ö†Ô∏è **Warning:** ${{ steps.generate.outputs.unresolved_placeholders }} placeholder(s) remain unresolved." >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "‚ÑπÔ∏è **README is already up to date**" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ùå **README generation failed validation**" >> $GITHUB_STEP_SUMMARY
          fi
