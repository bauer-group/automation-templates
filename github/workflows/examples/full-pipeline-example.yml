# Beispiel: Vollst√§ndige Pipeline mit README und Release
# Dieses Beispiel zeigt, wie beide Workflows zusammen verwendet werden

name: üîÑ Complete Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # README aktualisieren bei √Ñnderungen am Template
  readme-update:
    if: contains(github.event.head_commit.modified, 'docs/README.template.md') || github.event_name == 'workflow_dispatch'
    uses: bauer-group/automation-templates/github/workflows/readme.yml@main
    with:
      project-name: "Mein Vollst√§ndiges Projekt"
      company-name: "Meine Firma"
      project-description: "Ein Beispielprojekt mit vollst√§ndiger CI/CD Pipeline"
      contact-email: "support@example.com"

  # Release nur bei Push auf main
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: readme-update  # README erst aktualisieren, dann Release
    uses: bauer-group/automation-templates/github/workflows/release-please.yml@main
    with:
      release-type: "simple"
      package-name: "mein-vollstaendiges-projekt"

  # Deployment oder weitere Aktionen nach erfolgreichem Release
  deploy:
    if: needs.release.outputs.release_created
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Application
        run: |
          echo "Deploying version ${{ needs.release.outputs.version }}"
          # Hier w√ºrde das Deployment stattfinden
          project-description: "Beschreibung Ihres Projekts"
          auto-commit: ${{ inputs.auto-commit-readme }}
          fail-on-pr: 'true'

  release-management:
    name: Release Management
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Release Please
        uses: bauer-group/automation-templates/.github/actions/release-please@main
        with:
          target-branch: "main"
          release-type: "simple"
          direct-release: ${{ inputs.direct-release }}
          token: ${{ secrets.GITHUB_TOKEN }}
