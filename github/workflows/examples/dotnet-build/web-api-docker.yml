name: Build and Deploy Web API

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    uses: ./.github/workflows/dotnet-build.yml
    with:
      # .NET Configuration
      dotnet-version: '8.0.x'
      configuration: 'Release'
      
      # Project Settings
      project-path: 'src/WebApi/WebApi.csproj'
      working-directory: '.'
      
      # Build Options
      treat-warnings-as-errors: true
      verbosity: 'minimal'
      
      # Testing
      run-tests: true
      test-filter: 'Category!=LongRunning'
      collect-coverage: true
      coverage-type: 'cobertura'
      coverage-threshold: 80
      
      # Code Analysis
      run-code-analysis: true
      analysis-level: 'recommended'
      
      # Publishing
      publish: true
      output-directory: './publish'
      self-contained: false
      
      # Docker
      build-docker: true
      dockerfile-path: './Dockerfile'
      docker-image-name: ${{ env.IMAGE_NAME }}
      docker-registry: ${{ env.DOCKER_REGISTRY }}
      
      # Artifacts
      upload-artifacts: true
      artifact-name: 'web-api'
      artifact-retention-days: 7
      
    secrets:
      DOCKER_USERNAME: ${{ github.actor }}
      DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  
  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Deploy to Kubernetes
        run: |
          echo "Deploying to staging environment..."
          # Add your deployment commands here
  
  deploy-production:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          # Add your deployment commands here