name: README Auto-Update (PR/Manual)

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Bestmögliche Version für PR-Validierung: jüngster Tag (ohne führendes v), sonst Fallback.
      - name: Determine version (latest tag or fallback)
        shell: bash
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
          if [[ -n "$TAG" ]]; then
            TAG="${TAG#v}"
            echo "RELEASE_VERSION=$TAG" >> "$GITHUB_ENV"
          else
            echo "RELEASE_VERSION=${INIT_VERSION:-0.1.0}" >> "$GITHUB_ENV"
          fi

      - name: Generate README.MD
        run: python scripts/generate_readme.py

      # Bei manueller Ausführung dürfen Änderungen automatisch committed werden
      - name: Commit README changes (manual runs only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [[ -n "$(git status --porcelain README.MD)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.MD
            git commit -m "docs(readme): auto-generate README [skip ci]"
            git push
          else
            echo "No README changes."
          fi

      # Bei PRs nur prüfen und ggf. fehlschlagen, ohne zu committen
      - name: Fail if README is out-of-date (PRs)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(git status --porcelain README.MD)" ]]; then
            echo "README.MD ist nicht aktuell. Bitte README generieren (manuell) oder den PR entsprechend aktualisieren."
            exit 1
          fi