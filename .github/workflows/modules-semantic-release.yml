name: 📦 Module | Semantic Release

on:
  workflow_call:
    inputs:
      target-branch:
        description: 'Target branch for releases'
        required: false
        type: string
        default: 'main'
      dry-run:
        description: 'Perform dry run without creating release'
        required: false
        type: boolean
        default: false
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
    outputs:
      release-created:
        description: 'Whether a release was created'
        value: ${{ jobs.semantic-release.outputs.release-created }}
      version:
        description: 'Release version'
        value: ${{ jobs.semantic-release.outputs.version }}
      tag-name:
        description: 'Git tag name'
        value: ${{ jobs.semantic-release.outputs.tag }}

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  semantic-release:
    name: 📦 Semantic Release
    runs-on: ubuntu-latest
    outputs:
      release-created: ${{ steps.release.outputs.release-created }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: 🚀 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          
      - name: 🚀 Semantic Release
        id: semantic
        uses: bauer-group/automation-templates/.github/actions/semantic-release@main
        with:
          dry-run: ${{ inputs.dry-run }}
          branches: ${{ inputs.target-branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📊 Process Results
        id: release
        run: |
          # Map outputs from action
          if [ "${{ steps.semantic.outputs.new_release_published }}" = "true" ]; then
            echo "release-created=true" >> $GITHUB_OUTPUT
            # Use new_release_version for version output
            VERSION="${{ steps.semantic.outputs.new_release_version }}"
            TAG="${{ steps.semantic.outputs.tag }}"
            
            # Fallback if tag is empty, create from version
            if [ -z "$TAG" ]; then
              TAG="v${VERSION}"
            fi
            
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
            echo "✅ Released version: ${TAG} (v${VERSION})"
          else
            echo "release-created=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No release created (no releasable changes)"
          fi
          
      - name: 📊 Summary
        if: always()
        run: |
          echo "### 🚀 Semantic Release Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.release.outputs.release-created }}" = "true" ]; then
            echo "✅ **Release Created Successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| **Version** | ${{ steps.release.outputs.version }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **Tag** | ${{ steps.release.outputs.tag }} |" >> $GITHUB_STEP_SUMMARY
            echo "| **Branch** | ${{ inputs.target-branch }} |" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **No Release Created**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No releasable changes found since the last release." >> $GITHUB_STEP_SUMMARY
          fi